group 'cn.com.guardinatech.aofgo'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        kotlin_version = '1.2.0'
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: "kotlin-allopen"
apply plugin: "kotlin-noarg"

allOpen {
    annotation('javax.persistence.MappedSuperclass')
}

noArg {
    annotation('cn.com.guardiantech.aofgo.backend.NoArg')
    annotation('javax.persistence.Entity')
}

sourceCompatibility = 1.8

ext {
    log4j2Version = '2.8.2'
    slf4jVersion = '1.7.25'
    vertx_version = '3.5.0'
    hibernate_version = '5.2.12.Final'
    mysql_version = '6.0.6'
}


repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile "io.vertx:vertx-core:$vertx_version"
    compile "io.vertx:vertx-web:$vertx_version"
    compile "io.vertx:vertx-lang-kotlin-coroutines:$vertx_version"

    // Hibernate
    compile group: 'org.hibernate', name: 'hibernate-core', version: "$hibernate_version"
    compile group: 'org.hibernate', name: 'hibernate-c3p0', version: "$hibernate_version"
    compile group: 'org.hibernate', name: 'hibernate-envers', version: "$hibernate_version"

    compile group: 'org.reflections', name: 'reflections', version: '0.9.10'

    // Logging
    compile "org.apache.logging.log4j:log4j-api:$log4j2Version",
            "org.apache.logging.log4j:log4j-core:$log4j2Version",
            "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2Version",
            "org.apache.logging.log4j:log4j-jcl:$log4j2Version",
            "org.slf4j:slf4j-api:$slf4jVersion"

    // Kotlin Language Libraries
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.19.3'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    runtime group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'

    testCompile group: 'junit', name: 'junit', version: '4.12'
//    testCompile 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0+'
    testCompile "org.mockito:mockito-core:2.+"
}

ext.debug = project.hasProperty('debug')


compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task copyLibraries(type: Copy) {
    from configurations.runtime
    into("$buildDir/out/std/libs")
}

processResources {
    if (!debug) {
        println("Building Release")
        exclude("log4j2-test.xml")
    } else {
        println("Building DEBUG")
    }
}

jar {
    manifest {
        attributes(
                "Manifest-Version": "1.0",
                'Class-Path': configurations.runtime.files.collect { "libs/$it.name" }.join(' ') + ' libs/',
                "Main-Class": "cn.com.guardiantech.aofgo.backend.AOFGOBackendMain"
        )
    }

    dependsOn(copyLibraries)
    destinationDir = file("$buildDir/out/std/")
}
kotlin {
    experimental {
        coroutines "enable"
    }
}